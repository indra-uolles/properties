{"version":3,"sources":["pages/Home/index.js","services/FakeServer.js","services/Api.js","components/PriceRange/index.js","components/Rooms/index.js","services/FormSchema.js","services/FormUtils.js","components/ApartmentsListItem/index.js","pages/Properties/index.js","pages/Buy/index.js","pages/Rent/index.js","pages/New/index.js","components/MainMenu/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","react_default","a","createElement","fakeDB","buy","id","area","address","material","floor","rooms","price","mortgage","instalments","rent","new","fakeGetProperties","variables","priceRange","property","items","filters","push","item","min","max","length","includes","ms","value","result","filter","k","Promise","resolve","setTimeout","services_Api","PriceRange","state","_this","formData","minStart","maxStart","_marks","_this2","this","_this$state","marks","Object","defineProperty","toLocaleString","className","es","defaultValue","onAfterChange","e","setState","onChange","React","Component","options","label","fields","handleChange","selectedOptions","newState","deriveStateFromSelectedOptions","newValues","keys","map","key","objectSpread","selected","values","option","forEach","index","toString","deriveOptionsFromState","Fragment","react_selectize_src","placeholder","defaultValues","onValuesChange","originalSchema","title","type","properties","enum","enumNames","required","originalUISchema","ui:order","ui:field","classNames","ui:widget","ui:options","inline","condition","processForm","schema","uiSchema","newSchema","newUISchema","newFormData","conditionalFields","pickBy","field","hasOwnProperty","isEmpty","assign","each","dependantSchema","dependant","_getConditionRules","arguments","undefined","rules","allHaveToMatch","visible","indexOf","split","getConditionRules","matches","rule","_getConditionRule","conditionRule","invert","_rule","_rule2","slicedToArray","getConditionRule","stringValues","currentValues","isArray","shouldBeVisible","every","Boolean","some","omit","intersection","ApartmentsListItem","getRooms","concat","_this$props","src","href","target","Properties","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchProperties","getPropertiesPromise","api","getProperties","catch","console","error","bind","then","data","onSubmit","_ref","initialState","intentType","cancel","lib_default","ApartmentsListItem_ApartmentsListItem","Buy","Properties_Properties","Rent","New","MainMenuItems","url","text","MenuItem","NavLink","exact","to","activeClassName","MainMenu","MainMenu_MenuItem","App","BrowserRouter","Route","path","component","window","location","hostname","match","config","cancellation","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efa29613.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default function Home (props) {\n  return <div>Главная</div>;\n};","const fakeDB = {\n  'buy': [\n    {\n      id: '1',\n      area: 67,\n      address: 'г. Москва, САО, район Ховрино, ул. Дыбенко, 7',\n      material: 'монолитный',\n      floor: '6 из 30',\n      rooms: 2,\n      price: 154590,\n      mortgage: false,\n      instalments: false\n    },\n    {\n      id: '2',\n      area: 61,\n      address: 'г. Подольск, ул. Садовая, д. 14',\n      material: 'монолитный',\n      floor: '6 из 17',\n      rooms: 3,\n      price: 2147546,\n      mortgage: true,\n      instalments: false\n    }\n  ],\n  'rent': [\n    {\n      id: '3',\n      area: 80,\n      address: 'Московская область, городское поселение Ногинск, Ногинск, посёлок Ильича',\n      material: 'кирпичный',\n      floor: '1 из 17',\n      rooms: 4,\n      price: 40000\n    },\n    {\n      id: '5',\n      area: 30,\n      address: 'Московская область, городской округ Звенигород',\n      material: 'деревянный',\n      floor: '1 из 1',\n      rooms: 1,\n      price: 10000\n    }\n  ],\n  'new': [\n    {\n      id: '6',\n      area: 28,\n      address: 'Московская область, город Видное, улица Фабричная',\n      material: 'кирпичный',\n      floor: '2 из 17',\n      rooms: 1,\n      price: 4000000,\n      mortgage: true,\n      instalments: true\n    },\n    {\n      id: '7',\n      area: 44,\n      address: 'Московская область, город Королёв',\n      material: 'панельный',\n      floor: '12 из 12',\n      rooms: 2,\n      price: 1000000,\n      mortgage: true,\n      instalments: false\n    }\n  ]\n};\n\nfunction delayedPromise(ms, value) {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(value), ms);\n  });\n}\n\nconst filterByPriceRange = function(priceRange) {\n  return function(item) {\n    return item.price >= priceRange.min && item.price <= priceRange.max;\n  };\n};\n\nconst filterByRooms = function(rooms) {\n  return function(item) {\n    return rooms.includes(item.rooms);\n  };\n};\n\nconst filterByMortgage = function() {\n  return function(item) {\n    return item.mortgage;\n  };\n};\n\nconst filterByInstalments = function() {\n  return function(item) {\n    return item.instalments;\n  };\n};\n\nexport const fakeGetProperties = (variables) => {\n  const { property } = variables;\n  const items = fakeDB[property];\n  const filters = [];\n  if (!!variables.priceRange) {\n    filters.push(filterByPriceRange(variables.priceRange));\n  }\n\n  if (!!variables.rooms && variables.rooms.length > 0) {\n    filters.push(filterByRooms(variables.rooms));\n  }\n\n  if (!!variables.mortgage) {\n    filters.push(filterByMortgage());\n  }\n\n  if (!!variables.instalments) {\n    filters.push(filterByInstalments());\n  }\n\n  const result = items.filter((item) => {\n    for (var k = 0; k < filters.length; ++k) {\n      if (!filters[k](item)) return false;\n    }\n    return true;\n  });\n\n  return delayedPromise(500, result);\n}","import { fakeGetProperties } from './FakeServer';\n\nclass Api {\n  async getProperties(variables) {\n    return fakeGetProperties(variables);\n  }\n}\n\nexport default new Api();","import React, { Component } from 'react';\nimport { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport './style.css';\n\nexport default class PriceRange extends React.Component {\n  state = {\n    ...this.props.formData, \n    minStart: this.props.formData.min, \n    maxStart: this.props.formData.max\n  };\n\n  render() {\n    const { min, max, minStart, maxStart } = this.state;\n    const marks = {\n      [minStart]: minStart.toLocaleString('ru-RU'),\n      [maxStart]: maxStart.toLocaleString('ru-RU')\n    };\n    return (\n      <div className='price-range-wrap'>\n        <div className='price-range'>\n          <div className='properties-form__price'>{min.toLocaleString('ru-RU')} — {max.toLocaleString('ru-RU')}</div>\n          <Range \n            min={minStart} \n            max={maxStart} \n            defaultValue={[minStart, maxStart]} \n            onAfterChange={(e) => {\n              this.setState({\n                min: e[0],\n                max: e[1]\n              }, () => this.props.onChange(this.state));\n            }}\n            marks={marks}\n          />\n        </div>      \n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport {MultiSelect} from 'react-selectize';\nimport 'react-selectize/themes/index.css';\n\nconst options = [\n  { label: 'Студия', value: 0 },\n  { label: '1-комн.', value: 1 },\n  { label: '2-комн.', value: 2 },\n  { label: '3-комн.', value: 3 },\n  { label: '4-комн.', value: 4 },\n  { label: '5-комн.', value: 5 },\n  { label: '6-комн.', value: 6 }\n];\n\nexport default class Rooms extends React.Component {\n  //если выбрать 1,2, то будет {\"0\"; 1, \"1\": 2}\n  state = {...this.props.formData};\n\n  handleChange = (selectedOptions) => {\n    const newState = this.deriveStateFromSelectedOptions(selectedOptions);\n    const newValues = Object.keys(newState).map((key) => newState[key]);\n    \n    this.setState(\n      {...newState},\n      this.props.onChange(newValues)\n    );\n  }\n\n  deriveStateFromSelectedOptions = (selected) => {\n    const values = selected.map((option) => option.value);\n    let result = {};\n    values.forEach((value, index) => {\n      result[index.toString()] = value;\n    });\n    return result;\n  }\n\n  deriveOptionsFromState = () => {\n    const values = Object.keys(this.state).map((key) => this.state[key]);\n    return options.filter((option) => values.includes(option.value));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <MultiSelect\n          placeholder='К-во комнат'\n          options={options.map(\n            option => ({label: option.label, value: option.value})\n          )}\n          defaultValues={this.deriveOptionsFromState()}\n          onValuesChange={this.handleChange}\n        />\n      </React.Fragment>\n    );\n  }\n}","import PriceRange from '../components/PriceRange';\nimport Rooms from '../components/Rooms';\n\nexport const fields = { priceRange: PriceRange, rooms: Rooms };\n\nexport const originalSchema = {\n  title: '',\n  type: 'object',\n  properties: {\n    property: {\n      type: 'string',\n      title: 'Что вы хотите?',\n      enum: ['buy', 'rent', 'new'],\n      enumNames: ['Продажа', 'Аренда', 'Новостройка']\n    },\n    rooms: {\n      type: 'array',\n      items: {\n        type: 'number',\n        enum: [0, 1, 2, 3, 4, 5, 6],\n        enumNames: ['Студия', '1-комнатная квартира', '2-комнатная квартира', '3-комнатная квартира', '4-комнатная квартира', '5-комнатная квартира', '6-комнатная квартира']\n      }\n    },\n    priceRange: {\n      type: 'object',\n      required: ['min', 'max'],\n      properties: {\n        min: { type: 'number' },\n        max: { type: 'number' }\n      }\n    },\n    mortgage: {\n      type: 'boolean',\n      title: 'Ипотека'\n    },\n    instalments: {\n      type: 'boolean',\n      title: 'Рассрочка'\n    }\n  }\n};\n\nexport const originalUISchema = {\n  'ui:order': ['property', 'rooms', 'priceRange', 'mortgage', 'instalments'],\n  rooms: {\n    'ui:field': 'rooms',\n    classNames: 'col-md-6 col-sm-12'\n  },\n  priceRange: {\n    'ui:field': 'priceRange',\n    classNames: 'col-md-6 col-sm-12 properties-form__price-range'\n  },\n  property: {\n    'ui:widget': 'radio',\n    'ui:options': {\n      inline: true\n    },\n    classNames: 'hidden-form-field'\n  },\n  mortgage: {\n    condition: 'property=buy||property=new',\n    classNames: 'col-md-2 mortgage App-clearfix'\n  },\n  instalments: {\n    condition: 'property=buy||property=new',\n    classNames: 'col-md-2 instalments'\n  },\n};","import { \n  isEmpty, \n  pickBy, \n  assign, \n  each, \n  isArray, \n  indexOf, \n  every, \n  some, \n  omit, \n  intersection, \n  keys \n} from 'lodash';\n\n/**\n * Calculate new state for form based on UI Schema field conditions and current form data\n *\n * @param originalSchema - Original full schema containing all possible fields\n * @param originalUISchema - Original full UI Schema containing all possible fields\n * @param schema - Current schema\n * @param uiSchema - Current UI schema\n * @param formData - Current form data\n * @return {object} - Object containing new schema, uiSchema, and formData\n */\nexport function processForm (originalSchema, originalUISchema, schema, uiSchema, formData) {\n  let newSchema, newUISchema, newFormData;\n  let conditionalFields = pickBy(uiSchema, (field) => field.hasOwnProperty('condition'));\n\n  if (isEmpty(conditionalFields)) {\n    return {\n      schema,\n      uiSchema,\n      formData\n    };\n  }\n\n  newSchema = assign({}, schema);\n  newUISchema = assign({}, uiSchema);\n  newFormData = assign({}, formData);\n\n  each(conditionalFields, (dependantSchema, dependant) => {\n    const { rules, allHaveToMatch } = getConditionRules(dependantSchema.condition);\n    let matches = [];\n    each(rules, (rule) => {\n      const { field, values: stringValues, invert } = getConditionRule(rule);\n      let visible = invert;\n\n      const values = stringValues.map(value => {\n        if (value === 'true') {\n          value = true;\n        } else if (value === 'false') {\n          value = false;\n        }\n        return value;\n      });\n\n      if (field && newFormData.hasOwnProperty(field)) {\n          let currentValues = isArray(newFormData[field])\n            ? newFormData[field]\n            : [ newFormData[field] ];\n          each(values, (value) => {\n            if (invert) {\n              visible = visible && indexOf(currentValues, value) === -1;\n            }\n            else {\n              visible = visible || indexOf(currentValues, value) !== -1;\n            }\n          });\n      }\n\n      matches.push(visible);\n    });\n\n    // Add or remove conditional field from schema\n    let shouldBeVisible = false;\n    if (matches.length) {\n      shouldBeVisible = allHaveToMatch\n      // foo=bar && bar=foo\n      ? every(matches, Boolean)\n      // foo=bar || bar=foo\n      : some(matches, Boolean);\n    }\n\n    if (shouldBeVisible) {\n      newSchema.properties[dependant] = originalSchema.properties[dependant];\n    } else {\n      newSchema.properties = omit(newSchema.properties, [dependant]);\n      newFormData = omit(newFormData, [dependant]);\n    }\n  });\n\n  // Update UI Schema UI order\n  // react-jsonschema-form cannot handle extra properties found in UI order\n  newUISchema['ui:order'] = intersection(\n    originalUISchema['ui:order'],\n    keys(newSchema.properties)\n  );\n  // Update Schema required fields\n  if (originalSchema.hasOwnProperty('required')) {\n    newSchema.required = intersection(\n      originalSchema.required,\n      keys(newSchema.properties)\n    );\n  }\n\n  return {\n    schema: newSchema,\n    uiSchema: newUISchema,\n    formData: newFormData\n  };\n}\n\nfunction getConditionRules (condition = '') {\n  let rules = [];\n  let allHaveToMatch = false;\n  let visible = false;\n\n  // foo=bar || bar=foo\n  if (condition.indexOf('||') !== -1) {\n    rules = condition.split('||');\n    allHaveToMatch = false;\n    visible = false;\n  }\n  // foo=bar && bar=foo\n  else if (condition.indexOf('&&') !== -1) {\n    rules = condition.split('&&');\n    allHaveToMatch = true;\n    visible = true;\n  }\n  // foo=bar\n  else {\n    rules = [condition];\n    allHaveToMatch = true;\n    visible = true;\n  }\n\n  return {\n    rules,\n    allHaveToMatch,\n    visible\n  };\n}\n\nfunction getConditionRule (conditionRule) {\n  let rule = []\n  let invert;\n\n  // foo!=bar\n  if (conditionRule.indexOf('!=') !== -1) {\n    rule = conditionRule.split('!=');\n    invert = true;\n  }\n  // foo=bar\n  else if (conditionRule.indexOf('=') !== -1) {\n    rule = conditionRule.split('=');\n    invert = false;\n  }\n\n  if (rule.length !== 2) {\n    return false;\n  }\n\n  let [field, values] = rule;\n\n  values = values.split(',');\n\n  return {\n    field,\n    values,\n    invert\n  };\n}","import React, { Component } from 'react';\nimport './style.css';\n\nexport default class ApartmentsListItem extends React.Component {\n  getRooms = (rooms) => {\n    if (rooms == 0) {\n      return 'Студия'\n    } else {\n      return `${rooms}-комнатная квартира`\n    }\n  }\n\n  render() {\n    const { area, rooms, price, address, material, floor, mortgage, instalments } = this.props;\n    return (\n      <article className='apartments-list-item'>\n        <div className='apartments-list-item__image-wrap'>\n          <img className='apartments-list-item__image' src='//media.ongrad.ru/api/images/2kk_61_90.jpg'/>\n        </div>\n        <div className='apartments-list-item__content'>\n          <h2>\n            <a className='apartments-list-item__name' href='#' target='_blank'>\n              {this.getRooms(rooms)}, {area} м<sup>2</sup>\n            </a>\n          </h2>\n          <p className='apartments-list-item__address'>{address}</p>\n          <div className='apartments-list-item__price'>{price.toLocaleString('ru-RU')} руб.</div>\n          <ul className='apartments-list-item__details'>\n            <li className='apartments-list-item__details-option'>\n              <span>Дом: {material}</span>\n            </li>\n            <li className='apartments-list-item__details-option'>\n              <span>Этаж: {floor}</span>\n            </li>\n            {mortgage && <li className='apartments-list-item__details-option'>\n              <span className='font-weight-bold'>Ипотека</span>\n            </li>}\n            {instalments && <li className='apartments-list-item__details-option'>\n              <span className='font-weight-bold'>Рассрочка</span>\n            </li>}\n          </ul>\n        </div>\n      </article>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Form from 'react-jsonschema-form';\nimport Promise from 'bluebird';\nimport api from '../../services/Api';\nimport { originalSchema, originalUISchema, fields } from '../../services/FormSchema';\nimport { processForm } from '../../services/FormUtils';\nimport ApartmentsListItem from '../../components/ApartmentsListItem';\nimport './style.css';\n\nexport default class Properties extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...props.initialState,\n      properties: []\n    }\n  }\n\n  fetchProperties = (variables) => {\n    this.getPropertiesPromise = Promise.resolve(api.getProperties(variables))\n      .catch(console.error.bind(console, 'Failed to load properties'))\n      .then((data) =>{\n        this.setState({\n          properties: data\n        });\n      });\n  }\n\n  componentDidMount() {\n    const { intentType } = this.props;\n    const variables = { property: intentType };\n\n    this.fetchProperties(variables);\n  }\n\n  componentWillUnmount() {\n    !!this.getPropertiesPromise && this.getPropertiesPromise.cancel();\n  }\n\n  handleChange (data) {\n    const schema = { ...this.state.schema };\n    const uiSchema = { ...this.state.uiSchema };\n    const { formData } = data;\n\n    const newState = processForm(originalSchema, originalUISchema, schema, uiSchema, formData);\n\n    this.setState(newState);\n  }\n\n  onSubmit = ({formData}) => {\n    this.fetchProperties({...formData});\n  }\n\n  render() {\n    const { properties } = this.state;\n    return (\n      <React.Fragment>\n      <div className='properties-form'>\n        <Form\n          schema={this.state.schema}\n          uiSchema={this.state.uiSchema}\n          fields={fields}\n          formData={this.state.formData}\n          onChange={this.handleChange.bind(this)}\n          onSubmit={this.onSubmit}\n        >\n          <button type='submit' className='btn btn-info properties-form__submit'>Подобрать</button>\n        </Form>\n      </div>\n        <div className='properties'>\n          {properties.map((property) => (\n            <ApartmentsListItem {...property} key={property.id}/>\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Properties from '../Properties';\nimport { originalSchema, originalUISchema } from '../../services/FormSchema';\nimport { processForm } from '../../services/FormUtils';\n\nconst originalFormData = {\n  property: 'buy',\n  priceRange: {\n    min: 100000,\n    max: 10000000\n  },\n  rooms: [2,3]\n};\n\nconst initialState = processForm(\n  originalSchema, \n  originalUISchema, \n  originalSchema, \n  originalUISchema, \n  originalFormData\n);\n\nexport default function Buy(props) {\n  return <Properties initialState={initialState} intentType='buy'/>;\n}","import React, { Component } from 'react';\nimport Properties from '../Properties';\nimport { originalSchema, originalUISchema } from '../../services/FormSchema';\nimport { processForm } from '../../services/FormUtils';\n\nconst originalFormData = {\n  property: 'rent',\n  priceRange: {\n    min: 5000,\n    max: 90000\n  },\n  rooms: [1,4]\n};\n\nconst initialState = processForm(\n  originalSchema, \n  originalUISchema, \n  originalSchema, \n  originalUISchema, \n  originalFormData\n);\n\nexport default function Rent(props) {\n  return <Properties initialState={initialState} intentType='rent'/>;\n}","import React, { Component } from 'react';\nimport Properties from '../Properties';\nimport { originalSchema, originalUISchema } from '../../services/FormSchema';\nimport { processForm } from '../../services/FormUtils';\n\nconst originalFormData = {\n  property: 'new',\n  priceRange: {\n    min: 100000,\n    max: 10000000\n  },\n  rooms: [1,2]\n};\n\nconst initialState = processForm(\n  originalSchema, \n  originalUISchema, \n  originalSchema, \n  originalUISchema, \n  originalFormData\n);\n\nexport default function New(props) {\n  return <Properties initialState={initialState} intentType='new'/>;\n}","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst MainMenuItems = [\n  { url: '', text: 'Главная' },\n  { url: 'buy', text: 'Купить' },\n  { url: 'rent', text: 'Снять' },\n  { url: 'new', text: 'Новостройки' },\n];\n\nconst MenuItem = ({ item }) => {\n  return (\n    <NavLink exact to={`/${item.url}`} activeClassName='active'>\n      {item.text}\n    </NavLink>\n  );\n};\n\nexport default function MainMenu() {\n  return (\n    <nav>\n      <ul className='main-menu'>\n        {MainMenuItems.map((item, index) => (\n          <li className='main-menu__item' key={index}>\n            <MenuItem item={item} />\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Buy from './pages/Buy';\nimport Rent from './pages/Rent';\nimport New from './pages/New';\nimport MainMenu from './components/MainMenu';\nimport './bootstrap.css';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <header className='App-header'>\n            <MainMenu />\n          </header>\n          <div>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/buy' component={Buy} />\n            <Route exact path='/rent' component={Rent} />\n            <Route exact path='/new' component={New} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Promise from 'bluebird';\n\nPromise.config({cancellation: true});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}