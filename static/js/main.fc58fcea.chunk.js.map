{"version":3,"sources":["services/FakeServer.js","services/Api.js","components/PriceRange/index.js","components/Rooms/index.js","services/Forms.js","components/ApartmentsListItem/index.js","pages/Properties/index.js","pages/Buy/index.js","pages/Rent/index.js","pages/New/index.js","App.js","serviceWorker.js","index.js"],"names":["fakeDB","buy","id","area","address","material","floor","rooms","price","mortgage","instalments","rent","new","fakeGetProperties","type","ms","value","Promise","resolve","setTimeout","create","getProperties","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","variables","wrap","_context","prev","next","abrupt","stop","this","_x","apply","arguments","PriceRange","state","_this","props","formData","minStart","min","maxStart","max","_this2","_this$state","react_default","createElement","Fragment","className","toLocaleString","es","defaultValue","onAfterChange","e","setState","onChange","React","Component","options","label","fields","priceRange","handleChange","selectedOptions","newState","deriveStateFromSelectedOptions","newValues","keys","map","key","objectSpread","selected","values","option","result","forEach","index","toString","deriveOptionsFromState","filter","includes","react_selectize_src","placeholder","defaultValues","onValuesChange","originalSchema","title","properties","property","enum","enumNames","items","required","originalUISchema","ui:order","ui:field","classNames","ui:widget","ui:options","inline","condition","processForm","schema","uiSchema","newSchema","newUISchema","newFormData","conditionalFields","pickBy","field","hasOwnProperty","isEmpty","assign","each","dependantSchema","dependant","_getConditionRules","length","undefined","rules","allHaveToMatch","visible","indexOf","split","getConditionRules","matches","rule","_getConditionRule","conditionRule","invert","_rule","_rule2","slicedToArray","getConditionRule","stringValues","currentValues","isArray","push","shouldBeVisible","every","Boolean","some","omit","intersection","ApartmentsListItem","getRooms","concat","_this$props","src","href","target","Properties","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSubmit","alert","JSON","stringify","initialState","intentType","api","then","data","lib_default","bind","ApartmentsListItem_ApartmentsListItem","Buy","Properties_Properties","Rent","New","MainMenu","Link","to","App","BrowserRouter","App_MainMenu","Route","exact","path","component","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc58fcea.chunk.js","sourcesContent":["const fakeDB = {\n  'buy': [\n    {\n      id: '1',\n      area: 67,\n      address: 'г. Москва, САО, район Ховрино, ул. Дыбенко, 7',\n      material: 'монолитный',\n      floor: '6 из 30',\n      rooms: 2,\n      price: 154590,\n      mortgage: false,\n      instalments: false\n    },\n    {\n      id: '2',\n      area: 61,\n      address: 'г. Подольск, ул. Садовая, д. 14',\n      material: 'монолитный',\n      floor: '6 из 17',\n      rooms: 3,\n      price: 2147546,\n      mortgage: true,\n      instalments: false\n    }\n  ],\n  'rent': [\n    {\n      id: '3',\n      area: 80,\n      address: 'Московская область, городское поселение Ногинск, Ногинск, посёлок Ильича',\n      material: 'кирпичный',\n      floor: '1 из 17',\n      rooms: 4,\n      price: 40000\n    },\n    {\n      id: '5',\n      area: 30,\n      address: 'Московская область, городской округ Звенигород',\n      material: 'деревянный',\n      floor: '1 из 1',\n      rooms: 1,\n      price: 10000\n    }\n  ],\n  'new': [\n    {\n      id: '6',\n      area: 28,\n      address: 'Московская область, город Видное, улица Фабричная',\n      material: 'кирпичный',\n      floor: '2 из 17',\n      rooms: 1,\n      price: 4000000,\n      mortgage: true,\n      instalments: true\n    },\n    {\n      id: '7',\n      area: 44,\n      address: 'Московская область, город Королёв',\n      material: 'панельный',\n      floor: '12 из 12',\n      rooms: 2,\n      price: 1000000,\n      mortgage: true,\n      instalments: false\n    }\n  ]\n};\n\nfunction delayedPromise(ms, value) {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(value), ms);\n  });\n}\n\n// //number name author содержит\n// export const fakeFindPools = (filterStr) => {\n//   return delayedPromise(500, { \n//     filtered: fakeDatabase.pools\n//   });\n// }\n\nexport const fakeGetProperties = (type) => {\n  return delayedPromise(500, fakeDB[type]);\n}","import { fakeGetProperties } from './FakeServer';\n\nconst create = () => {\n\n  const getProperties = async(variables) => {\n    return fakeGetProperties(variables.type);\n  }\n\n  return {\n    getProperties\n  };\n};\n\nexport default create();","import React, { Component } from 'react';\nimport { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nexport default class PriceRange extends React.Component {\n  state = {\n    ...this.props.formData, \n    minStart: this.props.formData.min, \n    maxStart: this.props.formData.max\n  };\n\n  render() {\n    const { min, max, minStart, maxStart } = this.state;\n    return (\n      <React.Fragment>\n        <div className='properties-form__price'>{min.toLocaleString('ru-RU')} — {max.toLocaleString('ru-RU')}</div>\n        <Range \n          min={minStart} \n          max={maxStart} \n          defaultValue={[minStart, maxStart]} \n          onAfterChange={(e) => {\n            this.setState({\n              min: e[0],\n              max: e[1]\n            }, () => this.props.onChange(this.state));\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nimport {MultiSelect} from 'react-selectize';\nimport 'react-selectize/themes/index.css';\n\nconst options = [\n  { label: 'Студия', value: 0 },\n  { label: '1-комн.', value: 1 },\n  { label: '2-комн.', value: 2 },\n  { label: '3-комн.', value: 3 },\n  { label: '4-комн.', value: 4 },\n  { label: '5-комн.', value: 5 },\n  { label: '6-комн.', value: 6 }\n];\n\nexport default class Rooms extends React.Component {\n  //если выбрать 1,2, то будет {\"0\"; 1, \"1\": 2}\n  state = {...this.props.formData};\n\n  handleChange = (selectedOptions) => {\n    const newState = this.deriveStateFromSelectedOptions(selectedOptions);\n    const newValues = Object.keys(newState).map((key) => newState[key]);\n    \n    this.setState(\n      {...newState},\n      this.props.onChange(newValues)\n    );\n  }\n\n  deriveStateFromSelectedOptions = (selected) => {\n    const values = selected.map((option) => option.value);\n    let result = {};\n    values.forEach((value, index) => {\n      result[index.toString()] = value;\n    });\n    return result;\n  }\n\n  deriveOptionsFromState = () => {\n    const values = Object.keys(this.state).map((key) => this.state[key]);\n    return options.filter((option) => values.includes(option.value));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <MultiSelect\n          placeholder='К-во комнат'\n          options={options.map(\n            option => ({label: option.label, value: option.value})\n          )}\n          defaultValues={this.deriveOptionsFromState()}\n          onValuesChange={this.handleChange}\n        />\n      </React.Fragment>\n    );\n  }\n}","import { \n  isEmpty, \n  pickBy, \n  assign, \n  each, \n  isArray, \n  indexOf, \n  every, \n  some, \n  omit, \n  intersection, \n  keys \n} from 'lodash';\nimport PriceRange from '../components/PriceRange/index';\nimport Rooms from '../components/Rooms';\n\nexport const fields = { priceRange: PriceRange, rooms: Rooms };\n\nexport const originalSchema = {\n  title: '',\n  type: 'object',\n  properties: {\n    property: {\n      type: 'string',\n      title: 'Что вы хотите?',\n      enum: ['buy', 'rent', 'new'],\n      enumNames: ['Продажа', 'Аренда', 'Новостройка']\n    },\n    rooms: {\n      type: 'array',\n      items: {\n        type: 'number',\n        enum: [0, 1, 2, 3, 4, 5, 6],\n        enumNames: ['Студия', '1-комнатная квартира', '2-комнатная квартира', '3-комнатная квартира', '4-комнатная квартира', '5-комнатная квартира', '6-комнатная квартира']\n      }\n    },\n    priceRange: {\n      type: 'object',\n      required: ['min', 'max'],\n      properties: {\n        min: { type: 'number' },\n        max: { type: 'number' }\n      }\n    },\n    mortgage: {\n      type: 'boolean',\n      title: 'Ипотека'\n    },\n    instalments: {\n      type: 'boolean',\n      title: 'Рассрочка'\n    }\n  }\n};\n\nexport const originalUISchema = {\n  'ui:order': ['property', 'rooms', 'priceRange', 'mortgage', 'instalments'],\n  rooms: {\n    'ui:field': 'rooms',\n    classNames: 'col-xs-6'\n  },\n  priceRange: {\n    'ui:field': 'priceRange',\n    classNames: 'col-xs-6 properties-form__price-range'\n  },\n  property: {\n    'ui:widget': 'radio',\n    'ui:options': {\n      inline: true\n    },\n    classNames: 'col-xs-12 hidden-form-field'\n  },\n  mortgage: {\n    condition: 'property=buy||property=new',\n    classNames: 'col-xs-3 App-clearfix'\n  },\n  instalments: {\n    condition: 'property=buy||property=new',\n    classNames: 'col-xs-3'\n  },\n};\n\n/**\n * Calculate new state for form based on UI Schema field conditions and current form data\n *\n * @param originalSchema - Original full schema containing all possible fields\n * @param originalUISchema - Original full UI Schema containing all possible fields\n * @param schema - Current schema\n * @param uiSchema - Current UI schema\n * @param formData - Current form data\n * @return {object} - Object containing new schema, uiSchema, and formData\n */\nexport function processForm (originalSchema, originalUISchema, schema, uiSchema, formData) {\n  let newSchema, newUISchema, newFormData;\n  let conditionalFields = pickBy(uiSchema, (field) => field.hasOwnProperty('condition'));\n\n  if (isEmpty(conditionalFields)) {\n    return {\n      schema,\n      uiSchema,\n      formData\n    };\n  }\n\n  newSchema = assign({}, schema);\n  newUISchema = assign({}, uiSchema);\n  newFormData = assign({}, formData);\n\n  each(conditionalFields, (dependantSchema, dependant) => {\n    const { rules, allHaveToMatch } = getConditionRules(dependantSchema.condition);\n    let matches = [];\n    each(rules, (rule) => {\n      const { field, values: stringValues, invert } = getConditionRule(rule);\n      let visible = invert;\n\n      const values = stringValues.map(value => {\n        if (value === 'true') {\n          value = true;\n        } else if (value === 'false') {\n          value = false;\n        }\n        return value;\n      });\n\n      if (field && newFormData.hasOwnProperty(field)) {\n          let currentValues = isArray(newFormData[field])\n            ? newFormData[field]\n            : [ newFormData[field] ];\n          each(values, (value) => {\n            if (invert) {\n              visible = visible && indexOf(currentValues, value) === -1;\n            }\n            else {\n              visible = visible || indexOf(currentValues, value) !== -1;\n            }\n          });\n      }\n\n      matches.push(visible);\n    });\n\n    // Add or remove conditional field from schema\n    let shouldBeVisible = false;\n    if (matches.length) {\n      shouldBeVisible = allHaveToMatch\n      // foo=bar && bar=foo\n      ? every(matches, Boolean)\n      // foo=bar || bar=foo\n      : some(matches, Boolean);\n    }\n\n    if (shouldBeVisible) {\n      newSchema.properties[dependant] = originalSchema.properties[dependant];\n    } else {\n      newSchema.properties = omit(newSchema.properties, [dependant]);\n      newFormData = omit(newFormData, [dependant]);\n    }\n  });\n\n  // Update UI Schema UI order\n  // react-jsonschema-form cannot handle extra properties found in UI order\n  newUISchema['ui:order'] = intersection(\n    originalUISchema['ui:order'],\n    keys(newSchema.properties)\n  );\n  // Update Schema required fields\n  if (originalSchema.hasOwnProperty('required')) {\n    newSchema.required = intersection(\n      originalSchema.required,\n      keys(newSchema.properties)\n    );\n  }\n\n  return {\n    schema: newSchema,\n    uiSchema: newUISchema,\n    formData: newFormData\n  };\n}\n\nfunction getConditionRules (condition = '') {\n  let rules = [];\n  let allHaveToMatch = false;\n  let visible = false;\n\n  // foo=bar || bar=foo\n  if (condition.indexOf('||') !== -1) {\n    rules = condition.split('||');\n    allHaveToMatch = false;\n    visible = false;\n  }\n  // foo=bar && bar=foo\n  else if (condition.indexOf('&&') !== -1) {\n    rules = condition.split('&&');\n    allHaveToMatch = true;\n    visible = true;\n  }\n  // foo=bar\n  else {\n    rules = [condition];\n    allHaveToMatch = true;\n    visible = true;\n  }\n\n  return {\n    rules,\n    allHaveToMatch,\n    visible\n  };\n}\n\nfunction getConditionRule (conditionRule) {\n  let rule = []\n  let invert;\n\n  // foo!=bar\n  if (conditionRule.indexOf('!=') !== -1) {\n    rule = conditionRule.split('!=');\n    invert = true;\n  }\n  // foo=bar\n  else if (conditionRule.indexOf('=') !== -1) {\n    rule = conditionRule.split('=');\n    invert = false;\n  }\n\n  if (rule.length !== 2) {\n    return false;\n  }\n\n  let [field, values] = rule;\n\n  values = values.split(',');\n\n  return {\n    field,\n    values,\n    invert\n  };\n}","import React, { Component } from 'react';\nimport './style.css';\n\nexport default class ApartmentsListItem extends React.Component {\n  getRooms = (rooms) => {\n    if (rooms == 0) {\n      return 'Студия'\n    } else {\n      return `${rooms}-комнатная квартира`\n    }\n  }\n\n  render() {\n    const { area, rooms, price, address, material, floor } = this.props;\n    return (\n      <article className='apartments-list-item'>\n        <div className='apartments-list-item__image-wrap'>\n          <img className='apartments-list-item__image' src='//media.ongrad.ru/api/images/2kk_61_90.jpg'/>\n        </div>\n        <div className='apartments-list-item__content'>\n          <h2>\n            <a className='apartments-list-item__name' href='#' target='_blank'>\n              {this.getRooms(rooms)}, {area} м<sup>2</sup>\n            </a>\n          </h2>\n          <p className='apartments-list-item__address'>{address}</p>\n          <div className='apartments-list-item__price'>{price.toLocaleString('ru-RU')} руб.</div>\n          <ul className='apartments-list-item__details'>\n            <li className='apartments-list-item__details-option'>\n              <span>Дом: {material}</span>\n            </li>\n            <li className='apartments-list-item__details-option'>\n              <span>Этаж: {floor}</span>\n            </li>\n          </ul>\n        </div>\n      </article>\n    );\n  }\n}","import React, {Component} from 'react';\nimport Form from 'react-jsonschema-form';\nimport api from '../../services/Api';\nimport { originalSchema, originalUISchema, processForm, fields } from '../../services/Forms';\nimport ApartmentsListItem from '../../components/ApartmentsListItem';\nimport './style.css';\n\nexport default class Properties extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...props.initialState,\n      properties: []\n    }\n  }\n\n  componentDidMount() {\n    const {intentType} = this.props;\n    const variables = { type: intentType};\n    api.getProperties(variables).then((data) =>{\n      this.setState({\n        properties: data\n      });\n    });\n  }\n\n  handleChange (data) {\n    const schema = { ...this.state.schema };\n    const uiSchema = { ...this.state.uiSchema };\n    const { formData } = data;\n\n    const newState = processForm(originalSchema, originalUISchema, schema, uiSchema, formData);\n\n    this.setState(newState);\n  }\n\n  onSubmit = ({formData}) => {\n    alert(JSON.stringify(formData));\n  }\n\n  render() {\n    const { properties } = this.state;\n    return (\n      <React.Fragment>\n      <div className='properties-form'>\n        <Form\n          schema={this.state.schema}\n          uiSchema={this.state.uiSchema}\n          fields={fields}\n          formData={this.state.formData}\n          onChange={this.handleChange.bind(this)}\n          onSubmit={this.onSubmit}\n        />\n      </div>\n        <div className='properties'>\n          {properties.map((property) => (\n            <ApartmentsListItem {...property}/>\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport Properties from '../Properties';\nimport { originalSchema, originalUISchema, processForm } from '../../services/Forms';\n\nconst originalFormData = {\n  property: 'buy',\n  priceRange: {\n    min: 1145800,\n    max: 362900000\n  },\n  rooms: [1]\n};\n\nconst initialState = processForm(\n  originalSchema, \n  originalUISchema, \n  originalSchema, \n  originalUISchema, \n  originalFormData\n);\n\nexport default function Buy(props) {\n  return <Properties initialState={initialState} intentType='buy'/>;\n}","import React, {Component} from 'react';\nimport Properties from '../Properties';\nimport { originalSchema, originalUISchema, processForm } from '../../services/Forms';\n\nconst originalFormData = {\n  property: 'rent',\n  priceRange: {\n    min: 5000,\n    max: 90000\n  },\n  rooms: [1]\n};\n\nconst initialState = processForm(\n  originalSchema, \n  originalUISchema, \n  originalSchema, \n  originalUISchema, \n  originalFormData\n);\n\nexport default function Rent(props) {\n  return <Properties initialState={initialState} intentType='rent'/>;\n}","import React, {Component} from 'react';\nimport Properties from '../Properties';\nimport { originalSchema, originalUISchema, processForm } from '../../services/Forms';\n\nconst originalFormData = {\n  property: 'new',\n  priceRange: {\n    min: 1145800,\n    max: 362900000\n  },\n  rooms: [1]\n};\n\nconst initialState = processForm(\n  originalSchema, \n  originalUISchema, \n  originalSchema, \n  originalUISchema, \n  originalFormData\n);\n\nexport default function New(props) {\n  return <Properties initialState={initialState} intentType='new'/>;\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Buy from './pages/Buy/index';\nimport Rent from './pages/Rent/index';\nimport New from './pages/New/index';\nimport './bootstrap.css';\nimport './App.css';\n\nconst MainMenu = () => (\n  <div className='main-menu'>\n    <Link to='/'>\n      <button>Купить</button>\n    </Link>\n    <Link to='/rent'>\n      <button>Снять</button>\n    </Link>\n    <Link to='/new'>\n      <button>Новостройки</button>\n    </Link>\n  </div>\n)\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <header className='App-header'>\n            <div>Недвижимость</div>\n            <MainMenu />\n          </header>\n          <div>\n            <Route exact path='/' component={Buy} />\n            <Route exact path='/rent' component={Rent} />\n            <Route exact path='/new' component={New} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}