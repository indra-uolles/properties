{"version":3,"sources":["pages/About/About.js","pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","Component","originalSchema","title","type","properties","property","enum","enumNames","mortgage","instalments","originalUISchema","ui:order","classNames","ui:widget","ui:options","inline","condition","processForm","schema","uiSchema","formData","newSchema","newUISchema","newFormData","conditionalFields","pickBy","field","hasOwnProperty","isEmpty","assign","each","dependantSchema","dependant","_getConditionRules","arguments","length","undefined","rules","allHaveToMatch","visible","indexOf","split","getConditionRules","matches","rule","_getConditionRule","conditionRule","invert","_rule","_rule2","Object","slicedToArray","values","getConditionRule","stringValues","map","value","currentValues","isArray","push","shouldBeVisible","every","Boolean","some","omit","intersection","keys","required","initialState","Home","state","min","max","data","objectSpread","this","newState","setState","_this2","lib_default","onChange","handleChange","bind","js_default","maxValue","minValue","MainMenu","Link","to","App","BrowserRouter","className","App_MainMenu","Route","exact","path","component","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abfcbe99.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>О нас</div>\n    );\n  }\n}","import React, {Component} from 'react';\nimport Form from 'react-jsonschema-form';\nimport { isEmpty, pickBy, assign, each, isArray, indexOf, every, some, omit, intersection, keys } from 'lodash';\nimport InputRange from 'react-input-range';\n\nconst originalSchema = {\n  title: 'Объявления',\n  type: 'object',\n  properties: {\n    property: {\n      type: 'string',\n      title: 'Что вы хотите?',\n      enum: ['buy', 'rent', 'new'],\n      enumNames: ['Продажа', 'Аренда', 'Новостройка']\n    },\n    mortgage: {\n      type: 'boolean',\n      title: 'Ипотека'\n    },\n    instalments: {\n      type: 'boolean',\n      title: 'Рассрочка'\n    }\n  }\n};\n\nconst originalUISchema = {\n  'ui:order': ['property', 'mortgage', 'instalments'],\n  classNames: 'properties-form',\n  property: {\n    'ui:widget': 'radio',\n    'ui:options': {\n      inline: true\n    },\n    classNames: 'col-xs-12'\n  },\n  mortgage: {\n    condition: 'property=buy||property=new',\n    classNames: 'col-xs-2'\n  },\n  instalments: {\n    condition: 'property=buy||property=new',\n    classNames: 'col-xs-2'\n  },\n};\n\nconst originalFormData = {\n  property: 'buy'\n};\n\n/**\n * Calculate new state for form based on UI Schema field conditions and current form data\n *\n * @param originalSchema - Original full schema containing all possible fields\n * @param originalUISchema - Original full UI Schema containing all possible fields\n * @param schema - Current schema\n * @param uiSchema - Current UI schema\n * @param formData - Current form data\n * @return {object} - Object containing new schema, uiSchema, and formData\n */\nfunction processForm (originalSchema, originalUISchema, schema, uiSchema, formData) {\n  let newSchema, newUISchema, newFormData;\n  let conditionalFields = pickBy(uiSchema, (field) => field.hasOwnProperty('condition'));\n\n  if (isEmpty(conditionalFields)) {\n    return {\n      schema,\n      uiSchema,\n      formData\n    };\n  }\n\n  newSchema = assign({}, schema);\n  newUISchema = assign({}, uiSchema);\n  newFormData = assign({}, formData);\n\n  each(conditionalFields, (dependantSchema, dependant) => {\n    const { rules, allHaveToMatch } = getConditionRules(dependantSchema.condition);\n    let matches = [];\n    each(rules, (rule) => {\n      const { field, values: stringValues, invert } = getConditionRule(rule);\n      let visible = invert;\n\n      const values = stringValues.map(value => {\n        if (value === 'true') {\n          value = true;\n        } else if (value === 'false') {\n          value = false;\n        }\n        return value;\n      });\n\n      if (field && newFormData.hasOwnProperty(field)) {\n          let currentValues = isArray(newFormData[field])\n            ? newFormData[field]\n            : [ newFormData[field] ];\n          each(values, (value) => {\n            if (invert) {\n              visible = visible && indexOf(currentValues, value) === -1;\n            }\n            else {\n              visible = visible || indexOf(currentValues, value) !== -1;\n            }\n          });\n      }\n\n      matches.push(visible);\n    });\n\n    // Add or remove conditional field from schema\n    let shouldBeVisible = false;\n    if (matches.length) {\n      shouldBeVisible = allHaveToMatch\n      // foo=bar && bar=foo\n      ? every(matches, Boolean)\n      // foo=bar || bar=foo\n      : some(matches, Boolean);\n    }\n\n    if (shouldBeVisible) {\n      newSchema.properties[dependant] = originalSchema.properties[dependant];\n    } else {\n      newSchema.properties = omit(newSchema.properties, [dependant]);\n      newFormData = omit(newFormData, [dependant]);\n    }\n  });\n\n  // Update UI Schema UI order\n  // react-jsonschema-form cannot handle extra properties found in UI order\n  newUISchema['ui:order'] = intersection(\n    originalUISchema['ui:order'],\n    keys(newSchema.properties)\n  );\n  // Update Schema required fields\n  if (originalSchema.hasOwnProperty('required')) {\n    newSchema.required = intersection(\n      originalSchema.required,\n      keys(newSchema.properties)\n    );\n  }\n\n  return {\n    schema: newSchema,\n    uiSchema: newUISchema,\n    formData: newFormData\n  };\n}\n\nfunction getConditionRules (condition = '') {\n  let rules = [];\n  let allHaveToMatch = false;\n  let visible = false;\n\n  // foo=bar || bar=foo\n  if (condition.indexOf('||') !== -1) {\n    rules = condition.split('||');\n    allHaveToMatch = false;\n    visible = false;\n  }\n  // foo=bar && bar=foo\n  else if (condition.indexOf('&&') !== -1) {\n    rules = condition.split('&&');\n    allHaveToMatch = true;\n    visible = true;\n  }\n  // foo=bar\n  else {\n    rules = [condition];\n    allHaveToMatch = true;\n    visible = true;\n  }\n\n  return {\n    rules,\n    allHaveToMatch,\n    visible\n  };\n}\n\nfunction getConditionRule (conditionRule) {\n  let rule = []\n  let invert;\n\n  // foo!=bar\n  if (conditionRule.indexOf('!=') !== -1) {\n    rule = conditionRule.split('!=');\n    invert = true;\n  }\n  // foo=bar\n  else if (conditionRule.indexOf('=') !== -1) {\n    rule = conditionRule.split('=');\n    invert = false;\n  }\n\n  if (rule.length !== 2) {\n    return false;\n  }\n\n  let [field, values] = rule;\n\n  values = values.split(',');\n\n  return {\n    field,\n    values,\n    invert\n  };\n}\n\nconst initialState = processForm(\n  originalSchema, \n  originalUISchema, \n  originalSchema, \n  originalUISchema, \n  originalFormData\n);\n\nexport default class Home extends Component {\n  state = {...initialState, value: { min: 2, max: 10 }};\n\n  handleChange (data) {\n    const schema = { ...this.state.schema };\n    const uiSchema = { ...this.state.uiSchema };\n    const { formData } = data;\n\n    const newState = processForm(originalSchema, originalUISchema, schema, uiSchema, formData);\n\n    this.setState(newState);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>Главная</div>\n        <Form\n          schema={this.state.schema}\n          uiSchema={this.state.uiSchema}\n          formData={this.state.formData}\n          onChange={this.handleChange.bind(this)}\n        />\n        <InputRange\n        maxValue={20}\n        minValue={0}\n        value={this.state.value}\n        onChange={value => this.setState({ value })} />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport About from './pages/About/About';\nimport Home from './pages/Home/Home';\n//import './bootstrap.css';\nimport './App.css';\n\nconst MainMenu = () => (\n  <div>\n    <Link to=\"/\">\n      <button>Главная</button>\n    </Link>\n    <Link to=\"/about\">\n      <button>О нас</button>\n    </Link>\n  </div>\n)\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div>Недвижимость</div>\n            <MainMenu />\n          </header>\n          <div>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}